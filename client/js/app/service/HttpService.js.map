{"version":3,"sources":["../../app-es6/service/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAAaA,W;;;;;;;wCAEGC,G,EAAK;AACjB,gBAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,mBAAOH,GAAP;AACD;;;8BAEGI,G,EAAK;AAAA;;AAEP,mBAAOC,MAAMD,GAAN,EACEE,IADF,CACO;AAAA,qBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADP,EAEEM,IAFF,CAEO;AAAA,qBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFP,CAAP;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;+BAEIJ,G,EAAKK,I,EAAM;;AAEd,mBAAOJ,MAAMD,GAAN,EAAW;AAChBM,uBAAS,EAAE,gBAAiB,kBAAnB,EADO;AAEhBC,sBAAQ,MAFQ;AAGhBC,oBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,aAAX,CAAP;;AAMA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACD","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n  _handleErrors(res) {\n    if (!res.ok) throw new Error(res.statusText);\n    return res;\n  }\n\n  get(url) {\n\n    return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n\n    // return new Promise((resolve, reject) => {\n    //   let xhr = new XMLHttpRequest();\n    //   xhr.open('GET', url);   \n    //   xhr.onreadystatechange = () => {\n    //     if (xhr.readyState == 4) {\n    //       if (xhr.status == 200) {\n    //         resolve(JSON.parse(xhr.responseText))\n    //       } else {\n    //         reject(xhr.responseText);\n    //       }\n    //     }\n    //   }\n    //   xhr.send();\n    // })\n  }\n\n  post(url, dado) {\n\n    return fetch(url, {\n      headers: { 'Content-type' : 'application/json'},\n      method: 'post',\n      body: JSON.stringify(dado)\n    });\n\n    // return new Promise((resolve, reject) => {\n\n    //     let xhr = new XMLHttpRequest();\n    //     xhr.open(\"POST\", url, true);\n    //     xhr.setRequestHeader(\"Content-type\", \"application/json\");\n    //     xhr.onreadystatechange = () => {\n\n    //         if (xhr.readyState == 4) {\n\n    //             if (xhr.status == 200) {\n\n    //                 resolve(JSON.parse(xhr.responseText));\n    //             } else {\n\n    //                 reject(xhr.responseText);\n    //             }\n    //         }\n    //     };\n    //     xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\n    // });\n  }\n}"]}